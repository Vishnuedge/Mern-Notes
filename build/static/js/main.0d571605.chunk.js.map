{"version":3,"sources":["components/Footer/Footer.js","constants/userConstants.js","actions/userAction.js","components/Header/Header.js","screens/LandingPage/LandingPage.js","components/MainScreen.js","constants/notesConstants.js","actions/notesActions.js","components/ErrorMessage.js","screens/MyNotes/MyNotes.js","screens/LoginPage/LoginPage.js","screens/RegisterPage/RegisterPage.js","screens/CreateNote/CreateNote.js","screens/SingleNote.js","screens/ProfileScreen/ProfileScreen.js","App.js","store.js","reducers/userReducers.js","reducers/notesReducer.js","index.js"],"names":["Footer","className","Container","Row","Col","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","login","email","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","response","message","register","name","pic","Header","setSearch","history","useHistory","useDispatch","userInfo","useSelector","state","userLogin","Navbar","bg","expand","variant","Brand","to","Toggle","Collapse","id","Nav","Form","FormControl","placeholder","onChange","e","target","value","style","maxHeight","navbarScroll","Link","NavDropdown","title","Item","href","onClick","removeItem","push","LandingPage","useEffect","getItem","Button","size","MainScreen","children","NOTES_LIST_REQUEST","NOTES_LIST_SUCCESS","NOTES_LIST_FAIL","NOTES_CREATE_REQUEST","NOTES_CREATE_SUCCESS","NOTES_CREATE_FAIL","NOTES_UPDATE_REQUEST","NOTES_UPDATE_SUCCESS","NOTES_UPDATE_FAIL","NOTES_DELETE_REQUEST","NOTES_DELETE_SUCCESS","NOTES_DELETE_FAIL","deleteNoteAction","getState","Authorization","token","delete","ErrorMessage","Alert","fontSize","MyNotes","search","noteList","notes","error","successUpdate","noteUpdate","success","successCreate","noteCreate","noteDelete","successDelete","get","console","log","marginLeft","marginBottom","reverse","filter","filteredNote","toLowerCase","includes","map","note","Accordion","Card","margin","display","color","textDecoration","flex","cursor","alignSelf","as","Text","eventKey","_id","window","confirm","Body","Badge","category","content","createdAt","substring","LoginPage","useState","setEmail","setPassword","handleSubmit","preventDefault","onSubmit","Group","controlId","Label","Control","RegisterPage","setName","setPic","confirmPassword","setConfirmPassword","setMessage","picMessage","setPicMessage","userRegister","File","label","custom","pics","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","CreateNote","setTitle","setContent","setCategory","handleReset","createNoteAction","rows","Date","toLocaleDateString","SingleNote","match","date","setDate","errorDelete","params","updateAt","fetching","put","updateNoteAction","ProfileScreen","userUpdate","pushState","md","user","varient","src","alt","App","exact","path","component","reducer","combineReducers","action","loading","initailState","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d571605.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport './Footer.css';\r\nfunction Footer() {\r\n  return (\r\n    <>\r\n      <footer className='footer'>\r\n        <Container>\r\n          <Row>\r\n            <Col className='text-center py-3'>Copyright &copy; Your Note</Col>\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n} from '../constants/userConstants';\r\n\r\nimport axios from 'axios';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    );\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\nexport const register = (name, email, password, pic) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      '/api/users/',\r\n      { name, email, password, pic },\r\n      config\r\n    );\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post('/api/users/profile', user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Form,\r\n  FormControl,\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { logout } from '../../actions/userAction';\r\nfunction Header({ setSearch }) {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar bg='primary' expand='lg' variant='dark'>\r\n        <Container>\r\n          <Navbar.Brand>\r\n            <Link to='/'> NOTES</Link>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='navbarScroll' />\r\n          <Navbar.Collapse id='navbarScroll'>\r\n            <Nav className='m-auto'>\r\n              <Form className='d-flex'>\r\n                <FormControl\r\n                  type='search'\r\n                  placeholder='Search'\r\n                  className='mr-2'\r\n                  aria-label='Search'\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                />\r\n              </Form>\r\n            </Nav>\r\n            {userInfo ? (\r\n              <Nav\r\n                className=' my-2 my-lg-0'\r\n                style={{ maxHeight: '100px' }}\r\n                navbarScroll\r\n              >\r\n                <Nav.Link>\r\n                  <Link to='mynotes'>My Notes</Link>\r\n                </Nav.Link>\r\n\r\n                <NavDropdown\r\n                  title={userInfo ? userInfo.name : ''}\r\n                  id='navbarScrollingDropdown'\r\n                >\r\n                  <NavDropdown.Item href='/profile'>\r\n                    My Profile\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item onClick={handleLogout}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              </Nav>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect } from 'react';\r\nimport { Button, Container, Row } from 'react-bootstrap';\r\nimport './LandingPage.css';\r\nconst LandingPage = ({ history }) => {\r\n  useEffect(() => {\r\n    const userInfo = localStorage.getItem('userInfo');\r\n\r\n    if (userInfo) {\r\n      history.push('/mynotes');\r\n    }\r\n  }, [history]);\r\n  return (\r\n    <>\r\n      <div className='main'>\r\n        <Container>\r\n          <Row>\r\n            <div className='intro-text'>\r\n              <div>\r\n                <h1 className='title'>Welcome to YOUR NOTES</h1>\r\n                <p className='sub-title'>Save All Your Notes Here</p>\r\n              </div>\r\n              <div className='buttonContainer'>\r\n                <a href='/login'>\r\n                  <Button size='lg' className='Landing-Button'>\r\n                    LOGIN\r\n                  </Button>\r\n                </a>\r\n                <a href='/register'>\r\n                  <Button\r\n                    size='lg'\r\n                    className='Landing-Button'\r\n                    variant='outline-primary'\r\n                  >\r\n                    SIGNUP\r\n                  </Button>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport './MainScreen.css';\r\n\r\nconst MainScreen = ({ title, children }) => {\r\n  return (\r\n    <div className='mainback'>\r\n      <Container>\r\n        <Row>\r\n          <div className='page'>\r\n            {title && (\r\n              <>\r\n                <h1 className='heading'>{title}</h1>\r\n                <hr />\r\n              </>\r\n            )}\r\n            {children}\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainScreen;\r\n","export const NOTES_LIST_REQUEST = 'NOTES_LIST_REQUEST';\r\nexport const NOTES_LIST_SUCCESS = 'NOTES_LIST_SUCCESS';\r\nexport const NOTES_LIST_FAIL = 'NOTES_LIST_FAIL';\r\n\r\nexport const NOTES_CREATE_REQUEST = 'NOTES_CREATE_REQUEST';\r\nexport const NOTES_CREATE_SUCCESS = 'NOTES_CREATE_SUCCESS';\r\nexport const NOTES_CREATE_FAIL = 'NOTES_CREATE_FAIL';\r\n\r\nexport const NOTES_UPDATE_REQUEST = 'NOTES_UPDATE_REQUEST';\r\nexport const NOTES_UPDATE_SUCCESS = 'NOTES_UPDATE_SUCCESS';\r\nexport const NOTES_UPDATE_FAIL = 'NOTES_UPDATE_FAIL';\r\n\r\nexport const NOTES_DELETE_REQUEST = 'NOTES_DELETE_REQUEST';\r\nexport const NOTES_DELETE_SUCCESS = 'NOTES_DELETE_SUCCESS';\r\nexport const NOTES_DELETE_FAIL = 'NOTES_DELETE_FAIL';\r\n","import axios from 'axios';\r\nimport {\r\n  NOTES_CREATE_FAIL,\r\n  NOTES_CREATE_REQUEST,\r\n  NOTES_CREATE_SUCCESS,\r\n  NOTES_DELETE_FAIL,\r\n  NOTES_DELETE_REQUEST,\r\n  NOTES_DELETE_SUCCESS,\r\n  NOTES_LIST_FAIL,\r\n  NOTES_LIST_REQUEST,\r\n  NOTES_LIST_SUCCESS,\r\n  NOTES_UPDATE_FAIL,\r\n  NOTES_UPDATE_REQUEST,\r\n  NOTES_UPDATE_SUCCESS,\r\n} from '../constants/notesConstants';\r\n\r\nexport const listNotes = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: NOTES_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/notes`, config);\r\n\r\n    dispatch({\r\n      type: NOTES_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: NOTES_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createNoteAction =\r\n  (title, content, category) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: NOTES_CREATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `/api/notes/create`,\r\n        { title, content, category },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: NOTES_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: NOTES_CREATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const updateNoteAction =\r\n  (id, title, content, category) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: NOTES_UPDATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/notes/${id}`,\r\n        { title, content, category },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: NOTES_UPDATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({\r\n        type: NOTES_UPDATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deleteNoteAction = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: NOTES_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/notes/${id}`, config);\r\n\r\n    dispatch({\r\n      type: NOTES_DELETE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: NOTES_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nfunction ErrorMessage({ variant = 'info', children }) {\r\n  return (\r\n    <div>\r\n      <Alert variant={variant} style={{ fontSize: 20 }}>\r\n        <strong>{children}</strong>\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import React, { useEffect } from 'react';\r\nimport { Accordion, Badge, Button, Card } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteNoteAction, listNotes } from '../../actions/notesActions';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport ReactMarkdown from 'react-markdown';\r\nconst MyNotes = ({ search }) => {\r\n  const dispatch = useDispatch();\r\n  const noteList = useSelector((state) => state.noteList);\r\n  const { notes, error } = noteList;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const history = useHistory();\r\n\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { success: successUpdate } = noteUpdate;\r\n\r\n  const noteCreate = useSelector((state) => state.noteCreate);\r\n  const { success: successCreate } = noteCreate;\r\n\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n  const { error: errorDelete, success: successDelete } = noteDelete;\r\n\r\n  // const handleEdit = (note) => {\r\n  //   history.push(`note/${note._id}`);\r\n  // };\r\n  const handleDelete = (id) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteNoteAction(id));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(listNotes());\r\n    if (!userInfo) {\r\n      history.push('/');\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successCreate,\r\n    successUpdate,\r\n    successDelete,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <MainScreen title={`Welcome Back ${userInfo && userInfo.name}..`}>\r\n        {console.log(notes)}\r\n        <Link to='/createnote'>\r\n          <Button style={{ marginLeft: 10, marginBottom: 6 }} size='lg'>\r\n            Create new Note\r\n          </Button>\r\n        </Link>\r\n        {error && <ErrorMessage variant='danger'>{error}</ErrorMessage>}\r\n        {notes\r\n          ?.reverse()\r\n          .filter((filteredNote) =>\r\n            filteredNote.title.toLowerCase().includes(search.toLowerCase())\r\n          )\r\n          .map((note) => (\r\n            <Accordion>\r\n              <Card style={{ margin: 10 }} key={note._id}>\r\n                <Card.Header style={{ display: 'flex' }}>\r\n                  <span\r\n                    style={{\r\n                      color: 'black',\r\n                      textDecoration: 'none',\r\n                      flex: 1,\r\n                      cursor: 'pointer',\r\n                      alignSelf: 'center',\r\n                      fontSize: 18,\r\n                    }}\r\n                  >\r\n                    <Accordion.Toggle\r\n                      as={Card.Text}\r\n                      variant='link'\r\n                      eventKey='0'\r\n                    >\r\n                      {note.title}\r\n                    </Accordion.Toggle>\r\n                  </span>\r\n\r\n                  <div>\r\n                    <Button href={`/note/${note._id}`}>Edit</Button>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='mx-2'\r\n                      onClick={() => handleDelete(note._id)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </div>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey='0'>\r\n                  <Card.Body>\r\n                    <h4>\r\n                      <Badge variant='success'>\r\n                        Category - {note.category}\r\n                      </Badge>\r\n                    </h4>\r\n                    <blockquote className='blockquote mb-0'>\r\n                      <ReactMarkdown>{note.content}</ReactMarkdown>\r\n                      <footer className='blockquote-footer'>\r\n                        Created on{' '}\r\n                        <cite title='Source Title'>\r\n                          {note.createdAt.substring(0, 10)}\r\n                        </cite>\r\n                      </footer>\r\n                    </blockquote>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n          ))}\r\n      </MainScreen>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyNotes;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport './LoginPage.css';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../actions/userAction';\r\nfunction LoginPage({ history }) {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/mynotes');\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <MainScreen title='LOGIN'>\r\n      <div className='loginContainer'>\r\n        {error && <ErrorMessage variant='danger'>{error}</ErrorMessage>}\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group controlId='formBasicEmail'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter Email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='formBasicPassword'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter Password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit'>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n        <Row className='py-3'>\r\n          <Col>\r\n            Don't have a account ? <Link to='/register'> signin</Link>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './RegisterPage.css';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { register } from '../../actions/userAction';\r\nfunction RegisterPage({ history }) {\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [pic, setPic] = useState(\r\n    'https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg'\r\n  );\r\n\r\n  const [password, setPassword] = useState();\r\n  const [confirmPassword, setConfirmPassword] = useState();\r\n  const [message, setMessage] = useState(null);\r\n  const [picMessage, setPicMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { error, userInfo } = userRegister;\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Password Do Not Match');\r\n    } else {\r\n      dispatch(register(name, email, password, pic));\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/mynotes');\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const postDetails = (pics) => {\r\n    if (!pics) {\r\n      return setPicMessage('Please Select Image');\r\n    }\r\n    setPicMessage(null);\r\n\r\n    if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\r\n      const data = new FormData();\r\n      data.append('file', pics);\r\n      data.append('upload_preset', 'NotesImages');\r\n      data.append('cloud_name', 'dop7zi92s');\r\n      fetch('https://api.cloudinary.com/v1_1/dop7zi92s/image/upload', {\r\n        method: 'post',\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          setPic(data.url.toString());\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      return setPicMessage('Please Select a image');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen title='REGISTER'>\r\n      <div className='registerContainer'>\r\n        {error && <ErrorMessage variant='danger'>{error}</ErrorMessage>}\r\n        {message && <ErrorMessage variant='danger'>{message}</ErrorMessage>}\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group controlId=''>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter Name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='formBasicEmail'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter Email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='formBasicPassword'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter Password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='formBasicPassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm Password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          {picMessage && (\r\n            <ErrorMessage variant='danger'>{picMessage}</ErrorMessage>\r\n          )}\r\n          <Form.Group controlId='formBasicPassword'>\r\n            <Form.Label>Profile Picture</Form.Label>\r\n            <Form.File\r\n              type='image/png'\r\n              label='Upload Profile Picture'\r\n              custom\r\n              onChange={(e) => postDetails(e.target.files[0])}\r\n            />\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit'>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n        <Row className='py-3'>\r\n          <Col>\r\n            Already have a account ? <Link to='/login'> login</Link>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React, { useState } from 'react';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport { Button, Card, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createNoteAction } from '../../actions/notesActions';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nfunction CreateNote({ history }) {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [category, setCategory] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const noteCreate = useSelector((state) => state.noteCreate);\r\n  const { error, note } = noteCreate;\r\n  console.log(note);\r\n\r\n  const handleReset = () => {\r\n    setTitle('');\r\n    setContent('');\r\n    setCategory('');\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createNoteAction(title, content, category));\r\n    if (!title || !content || !category) return;\r\n\r\n    handleReset();\r\n    history.push('/mynotes');\r\n  };\r\n\r\n  return (\r\n    <MainScreen title='Create a Note'>\r\n      <Card>\r\n        <Card.Header>Create a new Note</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={handleSubmit}>\r\n            {error && <ErrorMessage variant='danger'>{error}</ErrorMessage>}\r\n            <Form.Group controlId='title'>\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type='title'\r\n                value={title}\r\n                placeholder='Enter the title'\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='content'>\r\n              <Form.Label>Content</Form.Label>\r\n              <Form.Control\r\n                as='textarea'\r\n                value={content}\r\n                placeholder='Enter the content'\r\n                rows={4}\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Note Preview</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n\r\n            <Form.Group controlId='content'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='content'\r\n                value={category}\r\n                placeholder='Enter the Category'\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {/* {loading && <Loading size={50} />} */}\r\n            <Button type='submit' variant='primary'>\r\n              Create Note\r\n            </Button>\r\n            <Button className='mx-2' onClick={handleReset} variant='danger'>\r\n              Reset Feilds\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n\r\n        <Card.Footer className='text-muted'>\r\n          Creating on - {new Date().toLocaleDateString()}\r\n        </Card.Footer>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default CreateNote;\r\n","import React, { useState, useEffect } from 'react';\r\nimport MainScreen from '../components/MainScreen';\r\nimport axios from 'axios';\r\nimport { Button, Card, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteNoteAction, updateNoteAction } from '../actions/notesActions';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\n\r\nfunction SingleNote({ match, history }) {\r\n  const [title, setTitle] = useState();\r\n  const [content, setContent] = useState();\r\n  const [category, setCategory] = useState();\r\n  const [date, setDate] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { error } = noteUpdate;\r\n\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n  const { error: errorDelete, success: successDelete } = noteDelete;\r\n\r\n  useEffect(() => {\r\n    const fetching = async () => {\r\n      const { data } = await axios.get(\r\n        `http://localhost:5000/api/notes/${match.params.id}`\r\n      );\r\n      console.log(data.title);\r\n      setTitle(data.title);\r\n      setContent(data.content);\r\n      setCategory(data.category);\r\n      setDate(data.updateAt);\r\n    };\r\n\r\n    fetching();\r\n  }, [match.params.id, date]);\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm('Are You Sure?')) {\r\n      dispatch(deleteNoteAction(id));\r\n    }\r\n    history.push('/mynotes');\r\n  };\r\n  const handleReset = () => {\r\n    setTitle('');\r\n    setCategory('');\r\n    setContent('');\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateNoteAction(match.params.id, title, content, category));\r\n    if (!title || !content || !category) return;\r\n\r\n    handleReset();\r\n    history.push('/mynotes');\r\n  };\r\n  return (\r\n    <div>\r\n      <MainScreen title='Update your Note'>\r\n        <Card>\r\n          <Card.Header>Update Note</Card.Header>\r\n          <Card.Body>\r\n            <Form onSubmit={handleSubmit}>\r\n              {errorDelete && (\r\n                <ErrorMessage variant='danger'>{errorDelete}</ErrorMessage>\r\n              )}\r\n              {error && <ErrorMessage variant='danger'>{error}</ErrorMessage>}\r\n              <Form.Group controlId='title'>\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control\r\n                  type='title'\r\n                  value={title}\r\n                  placeholder='Enter the title'\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='content'>\r\n                <Form.Label>Content</Form.Label>\r\n                <Form.Control\r\n                  as='textarea'\r\n                  value={content}\r\n                  placeholder='Enter the content'\r\n                  rows={4}\r\n                  onChange={(e) => setContent(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              {content && (\r\n                <Card>\r\n                  <Card.Header>Note Preview</Card.Header>\r\n                  <Card.Body>\r\n                    <ReactMarkdown>{content}</ReactMarkdown>\r\n                  </Card.Body>\r\n                </Card>\r\n              )}\r\n\r\n              <Form.Group controlId='content'>\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Control\r\n                  type='content'\r\n                  value={category}\r\n                  placeholder='Enter the Category'\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              {/* {loading && <Loading size={50} />} */}\r\n              <Button type='submit' variant='primary'>\r\n                UPDATE\r\n              </Button>\r\n              <Button\r\n                className='mx-2'\r\n                variant='danger'\r\n                onClick={() => {\r\n                  handleDelete(match.params.id);\r\n                }}\r\n              >\r\n                DELETE\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n\r\n          <Card.Footer className='text-muted'>\r\n            Updated on - {new Date().toLocaleDateString()}\r\n          </Card.Footer>\r\n        </Card>\r\n      </MainScreen>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleNote;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { updateProfile } from '../../actions/userAction';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport './ProfileScreen.css';\r\nfunction ProfileScreen() {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [pic, setPic] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [picMessage, setPicMessage] = useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { error, success } = userUpdate;\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.pushState('/');\r\n    } else {\r\n      setName(userInfo.name);\r\n      setEmail(userInfo.email);\r\n      setPic(userInfo.pic);\r\n    }\r\n  }, [userInfo]);\r\n  const postDetails = (pics) => {\r\n    if (!pics) {\r\n      return setPicMessage('Please Select Image');\r\n    }\r\n    setPicMessage(null);\r\n\r\n    if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\r\n      const data = new FormData();\r\n      data.append('file', pics);\r\n      data.append('upload_preset', 'NotesImages');\r\n      data.append('cloud_name', 'dop7zi92s');\r\n      fetch('https://api.cloudinary.com/v1_1/dop7zi92s/image/upload', {\r\n        method: 'post',\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          setPic(data.url.toString());\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      return setPicMessage('Please Select a image');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password === confirmPassword)\r\n      dispatch(updateProfile({ name, email, password, pic }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MainScreen title='EDIT PROFILE'>\r\n        <div>\r\n          <Row className='profileContainer'>\r\n            <Col md={6}>\r\n              <Form onSubmit={handleSubmit}>\r\n                {success && (\r\n                  <ErrorMessage variant='success'>\r\n                    Updated Successfully\r\n                  </ErrorMessage>\r\n                )}\r\n                <Form.Group controlId='name'>\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter Name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    type='email'\r\n                    placeholder='Enter Email'\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type='password'\r\n                    placeholder='Enter Password'\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                  <Form.Label>Confirm Password</Form.Label>\r\n                  <Form.Control\r\n                    type='password'\r\n                    placeholder='Confirm Password'\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                {picMessage && (\r\n                  <ErrorMessage varient='danger'>{picMessage}</ErrorMessage>\r\n                )}\r\n                <Form.Group controlId='pic'>\r\n                  <Form.Label>Change Profile Picture</Form.Label>\r\n                  <Form.File\r\n                    id='custom-file'\r\n                    type='image/png'\r\n                    label='Upload Profile Picture'\r\n                    custom\r\n                    onChange={(e) => postDetails(e.target.files[0])}\r\n                  ></Form.File>\r\n                </Form.Group>\r\n                <Button type='submit' varient='primary'>\r\n                  UPDATE\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n            <Col className='profilePicture'>\r\n              <img src={pic} alt={name} className='profilePic' />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </MainScreen>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","import React, { useState } from 'react';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport LandingPage from './screens/LandingPage/LandingPage';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport MyNotes from './screens/MyNotes/MyNotes';\nimport LoginPage from './screens/LoginPage/LoginPage';\nimport RegisterPage from './screens/RegisterPage/RegisterPage';\nimport CreateNote from './screens/CreateNote/CreateNote';\nimport SingleNote from './screens/SingleNote';\nimport ProfileScreen from './screens/ProfileScreen/ProfileScreen';\n\nfunction App() {\n  const [search, setSearch] = useState('');\n  return (\n    <BrowserRouter>\n      <Header setSearch={setSearch} />\n      <main>\n        <Route exact path='/' component={LandingPage} />\n        <Route exact path='/login' component={LoginPage} />\n        <Route path='/profile' component={ProfileScreen} />\n        <Route exact path='/register' component={RegisterPage} />\n        <Route path='/createnote' component={CreateNote} />\n        <Route path='/note/:id' component={SingleNote} />\n        <Route path='/mynotes' component={() => <MyNotes search={search} />} />\n      </main>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers';\r\nimport {\r\n  notesCreateReducer,\r\n  notesDeleteReducer,\r\n  notesListReducer,\r\n  notesUpdateReducer,\r\n} from './reducers/notesReducer';\r\nconst reducer = combineReducers({\r\n  // this will have reducers\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  noteList: notesListReducer,\r\n  noteCreate: notesCreateReducer,\r\n  noteUpdate: notesUpdateReducer,\r\n  noteDelete: notesDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null;\r\n\r\nconst initailState = {\r\n  userLogin: {\r\n    userInfo: userInfoFromStorage,\r\n  },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initailState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, userInfo: action.payload, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  NOTES_CREATE_FAIL,\r\n  NOTES_CREATE_REQUEST,\r\n  NOTES_CREATE_SUCCESS,\r\n  NOTES_DELETE_FAIL,\r\n  NOTES_DELETE_REQUEST,\r\n  NOTES_DELETE_SUCCESS,\r\n  NOTES_LIST_FAIL,\r\n  NOTES_LIST_REQUEST,\r\n  NOTES_LIST_SUCCESS,\r\n  NOTES_UPDATE_FAIL,\r\n  NOTES_UPDATE_REQUEST,\r\n  NOTES_UPDATE_SUCCESS,\r\n} from '../constants/notesConstants';\r\n\r\nexport const notesListReducer = (state = { notes: [] }, action) => {\r\n  switch (action.type) {\r\n    case NOTES_LIST_REQUEST:\r\n      return { loading: true };\r\n    case NOTES_LIST_SUCCESS:\r\n      return { loading: false, notes: action.payload };\r\n    case NOTES_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const notesCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTES_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case NOTES_CREATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case NOTES_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const notesUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTES_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case NOTES_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case NOTES_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const notesDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTES_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case NOTES_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case NOTES_DELETE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}